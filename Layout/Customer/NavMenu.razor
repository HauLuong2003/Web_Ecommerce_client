 <!-- sidebar -->

<div class="col-sm-12 col-md-12 col-lg-3">


    <div class="mb-5">
        <h3 class="h6">Price</h3>

        <div class="form-check user-select-none mb-2">
            <input class="form-check-input form-check-input-default" type="checkbox" value="" id="filter-price-25-50">
            <label class="form-check-label" for="filter-price-25-50">
                25 - 50
            </label>
        </div>
        <div class="form-check user-select-none mb-2">
            <input class="form-check-input form-check-input-default" type="checkbox" value="" id="filter-price-50-100">
            <label class="form-check-label" for="filter-price-50-100">
                50 - 100
            </label>
        </div>
        <div class="form-check user-select-none mb-2">
            <input class="form-check-input form-check-input-default" type="checkbox" value="" id="filter-price-100-500">
            <label class="form-check-label" for="filter-price-100-500">
                100 - 500
            </label>
        </div>
        <div class="form-check user-select-none mb-2">
            <input class="form-check-input form-check-input-default" type="checkbox" value="" id="filter-price-500">
            <label class="form-check-label" for="filter-price-500">
                500 &amp; Above
            </label>
        </div>
    </div>

    <div class="mb-5">
        <h3 class="h6">Brand</h3>
        @if (brandList.Any())
        {
            foreach (Brand brand in brandList)
            {

                <div class="form-check user-select-none mb-2">
                    <input class="form-check-input form-check-input-default"
                           type="checkbox"
                           value="@brand.BrandId"
                           id="filter-brand-@brand.BrandId"
                           checked="@((id == brand.BrandId) ? true : false)"
                           @onclick="() => BrandClick( brand.BrandId)"
                            >
                    <label class="form-check-label" for="filter-brand-@brand.BrandId">
                        @brand.BrandName
                    </label>
                </div>
            }
        }
    </div>
</div>
@code{
    List<Brand> brandList = new();
    [Parameter] public EventCallback<int> BrandClickEvent { get; set; }
    public int id { get; set; } = 0;
    protected override async Task OnInitializedAsync()
    {
        brandList = await brandService.GetAllBrands();
       
    }

    public async Task BrandClick(int brandId)
    {
        id = brandId;
        await BrandClickEvent.InvokeAsync(brandId);
    }
 
}
