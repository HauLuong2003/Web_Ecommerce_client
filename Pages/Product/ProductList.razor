@page "/product-list"
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Product List</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <p><a class="btn btn-success float-end" href="/add-product"> Add New Product </a></p>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>

                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Id</th>
                                                <th>Name</th>
                                                <th>Quantity</th>
                                                <th>Image</th>
                                                <th>Price</th>
                                                <th>Brand</th>
                                                <th>Creat_at</th>
                                                <th>Edit</th>
                                            </tr>
                                        </thead>
                                        <tbody>      
                                            
                                        </tbody>
                                    </table>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {

    // public List<Parent> AllParents { get; set; } = new();

    // protected override async Task OnInitializedAsync()
    // {
    //     await LoadAllParents();
    // }

    // public async Task LoadAllParents()
    // {
    //     var data = await ParentService.GetAllAsync();
    //     AllParents.Clear();

    //     if (data is null) return;
    //     foreach (var item in data)
    //     {
    //         AllParents.Add(item);
    //     }
    // }

    // private void EditStudent(int id)
    // {
    //     navigation.NavigateTo($"/student/edit/{id}");
    // }

    // private async Task DeleteStudent(int Id)
    // {
    //     var result = await ParentService.DeleteAsync(Id);
    //     await LoadAllParents();
    // }
}

